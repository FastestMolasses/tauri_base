[package]
name = "app"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
license = ""
repository = ""
default-run = "app"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.4.0", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.4.0", features = [ "os-all", "path-all", "fs-rename-file", "fs-remove-file", "fs-write-file", "fs-remove-dir", "fs-exists", "fs-create-dir", "fs-copy-file", "fs-read-dir", "fs-read-file", "window-unmaximize", "window-close", "window-minimize", "window-hide", "window-maximize", "window-start-dragging", "window-show", "window-unminimize"] }
tauri-plugin-window-state = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
window-shadows = "0.2.1"
once_cell = "1.18.0"
taurpc = "0.2.3"
specta = { version = "1.0.5", features = ["export"] }
tokio = { version = "1.32.0", features = ["full"] }
chrono = "0.4.28"

[target.'cfg(target_os = "macos")'.dependencies]
cocoa = "0.25.0"
objc = "0.2.7"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
